// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListApi.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20240711134833_Horarios")]
    partial class Horarios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ListApi.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Horarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dia = "Segunda-feira",
                            EndTime = "23:00",
                            StartTime = "13:00",
                            Status = "Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Dia = "Terça-feira",
                            EndTime = "23:30",
                            StartTime = "13:00",
                            Status = "Aberto"
                        },
                        new
                        {
                            Id = 3,
                            Dia = "Quarta-feira",
                            EndTime = "23:00",
                            StartTime = "13:00",
                            Status = "Aberto"
                        },
                        new
                        {
                            Id = 4,
                            Dia = "Quinta-feira",
                            EndTime = "18:00",
                            StartTime = "8:20",
                            Status = "Aberto"
                        },
                        new
                        {
                            Id = 5,
                            Dia = "Sexta-feira",
                            EndTime = "23:59",
                            StartTime = "18:00",
                            Status = "Aberto"
                        },
                        new
                        {
                            Id = 6,
                            Dia = "Sábado",
                            EndTime = "",
                            StartTime = "",
                            Status = "Fechado"
                        },
                        new
                        {
                            Id = 7,
                            Dia = "Domingo",
                            EndTime = "23:00",
                            StartTime = "18:00",
                            Status = "Aberto"
                        });
                });

            modelBuilder.Entity("ListApi.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Cachorro Quente",
                            Description = "Pão de leite, salsicha, tomate, maionese, ketchup e mostarda.",
                            ImagePath = "assets/images/foods/fries.png",
                            Name = "Cachorro Quente Simples",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "Cachorro Quente",
                            Description = "Pão de leite, 02 salsicha, tomate, maionese, ketchup e mostarda.",
                            ImagePath = "assets/images/foods/hotduplo.png",
                            Name = "HOT DOG TRADICIONAL DUPLO",
                            Price = 2.5
                        });
                });

            modelBuilder.Entity("ListApi.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EntregaTempo")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Frete")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PedidoMin")
                        .HasColumnType("double");

                    b.Property<string>("Retirada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Celular = "4399859-9286",
                            Cep = "86601028",
                            Cidade = "Rolândia",
                            Cnpj = "19.123.456/0001-12",
                            Email = "foodboard@gmail.com",
                            Endereco = "Avenida Romário Martins 101 Centro",
                            EntregaTempo = 40,
                            Estado = "PR",
                            Frete = "9",
                            Name = "FoodBoard",
                            PedidoMin = 8.5,
                            Retirada = "30",
                            Telefone = "433256-9661"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Permission")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Password = "123",
                            Username = "Maria da Penha"
                        },
                        new
                        {
                            Id = "2",
                            Password = "123",
                            Username = "Maik"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

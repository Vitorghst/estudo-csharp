// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListApi.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20240710184748_AddMenuItems")]
    partial class AddMenuItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ListApi.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Cachorro Quente",
                            Description = "Pão de leite, salsicha, tomate, maionese, ketchup e mostarda.",
                            ImagePath = "assets/images/foods/fries.png",
                            Name = "Cachorro Quente Simples",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "Cachorro Quente",
                            Description = "Pão de leite, 02 salsicha, tomate, maionese, ketchup e mostarda.",
                            ImagePath = "assets/images/foods/hotduplo.png",
                            Name = "HOT DOG TRADICIONAL DUPLO",
                            Price = 2.5
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Password = "123",
                            Username = "Maria da Penha"
                        },
                        new
                        {
                            Id = "2",
                            Password = "123",
                            Username = "Maik"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
